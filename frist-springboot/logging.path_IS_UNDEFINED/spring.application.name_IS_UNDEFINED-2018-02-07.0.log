[ INFO ] [2018-02-07 10:41:07] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://localhost:8888/
[ INFO ] [2018-02-07 10:41:15] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=frist-springboot-notice, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2018-02-07 10:41:15] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [97] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource [name='https://github.com/wjj863257116/springCloudConfig/respo/frist-springboot-notice-dev.properties']]]
[ INFO ] [2018-02-07 10:41:15] boot.ConfigClientApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 10:41:15] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@acdcf71: startup date [Wed Feb 07 10:41:15 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 10:41:17] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=d6cf206f-10ad-37dd-927e-c1e888269027
[ INFO ] [2018-02-07 10:41:18] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 17070 (http)
[ INFO ] [2018-02-07 10:41:18] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 3274 ms
[ INFO ] [2018-02-07 10:41:19] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 10:41:19] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 10:41:19] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 10:41:19] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 10:41:19] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 10:41:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@acdcf71: startup date [Wed Feb 07 10:41:15 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 10:41:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 10:41:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 10:41:19] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 10:41:19] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 10:41:19] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2018-02-07 10:41:20] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 10:41:20] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 10:41:20] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 10:41:20] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-07 10:41:20] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517971280824 with initial instances count: 2
[ INFO ] [2018-02-07 10:41:20] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-client with eureka with status UP
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517971280839, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070: registering service...
[ WARN ] [2018-02-07 10:41:20] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at boot.ConfigClientApplication.main(ConfigClientApplication.java:16)
[ INFO ] [2018-02-07 10:41:20] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070 - registration status: 204
[ INFO ] [2018-02-07 10:41:20] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 17070 (http)
[ INFO ] [2018-02-07 10:41:20] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 17070
[ INFO ] [2018-02-07 10:41:20] boot.ConfigClientApplication [57] - Started ConfigClientApplication in 30.19 seconds (JVM running for 44.317)
[ WARN ] [2018-02-07 10:41:50] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:42:20] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:42:50] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:43:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:43:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:44:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:44:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:45:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:45:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ INFO ] [2018-02-07 10:47:42] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://localhost:8888/
[ INFO ] [2018-02-07 10:47:48] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=frist-springboot-notice, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2018-02-07 10:47:48] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [97] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource [name='https://github.com/wjj863257116/springCloudConfig/respo/frist-springboot-notice-dev.properties']]]
[ INFO ] [2018-02-07 10:47:48] boot.ConfigClientApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 10:47:48] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d540566: startup date [Wed Feb 07 10:47:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 10:47:49] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=d6cf206f-10ad-37dd-927e-c1e888269027
[ INFO ] [2018-02-07 10:47:49] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 17070 (http)
[ INFO ] [2018-02-07 10:47:49] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1020 ms
[ INFO ] [2018-02-07 10:47:49] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 10:47:49] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 10:47:49] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 10:47:49] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 10:47:49] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 10:47:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d540566: startup date [Wed Feb 07 10:47:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 10:47:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 10:47:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 10:47:50] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 10:47:50] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 10:47:50] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2018-02-07 10:47:51] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 10:47:51] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 10:47:51] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 10:47:51] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-07 10:47:51] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517971671629 with initial instances count: 2
[ INFO ] [2018-02-07 10:47:51] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-client with eureka with status UP
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517971671645, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070: registering service...
[ WARN ] [2018-02-07 10:47:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.startup(DiscoveryClientConfigServiceBootstrapConfiguration.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at boot.ConfigClientApplication.main(ConfigClientApplication.java:16)
[ INFO ] [2018-02-07 10:47:51] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 17070 (http)
[ INFO ] [2018-02-07 10:47:51] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 17070
[ INFO ] [2018-02-07 10:47:51] boot.ConfigClientApplication [57] - Started ConfigClientApplication in 16.414 seconds (JVM running for 17.511)
[ INFO ] [2018-02-07 10:47:51] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070 - registration status: 204
[ WARN ] [2018-02-07 10:48:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ INFO ] [2018-02-07 10:48:30] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2018-02-07 10:48:30] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
[ WARN ] [2018-02-07 10:48:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:49:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:49:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:50:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:50:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:51:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:51:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:52:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ INFO ] [2018-02-07 10:52:51] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ WARN ] [2018-02-07 10:52:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:53:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:53:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:54:21] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:54:51] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ WARN ] [2018-02-07 10:55:22] org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration [103] - Could not locate configserver via discovery
java.lang.IllegalStateException: No instances found of configserver (frist-springboot-config-server)
	at org.springframework.cloud.config.client.ConfigServerInstanceProvider.getConfigServerInstance(ConfigServerInstanceProvider.java:25)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.refresh(DiscoveryClientConfigServiceBootstrapConfiguration.java:80)
	at org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration.heartbeat(DiscoveryClientConfigServiceBootstrapConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:98)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[ INFO ] [2018-02-07 10:55:49] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://DESKTOP-FCMTAJR:8888/
[ INFO ] [2018-02-07 10:55:55] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=frist-springboot-notice, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2018-02-07 10:55:55] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [97] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource [name='https://github.com/wjj863257116/springCloudConfig/respo/frist-springboot-notice-dev.properties']]]
[ INFO ] [2018-02-07 10:55:55] boot.ConfigClientApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 10:55:55] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 10:55:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 10:55:56] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=d6cf206f-10ad-37dd-927e-c1e888269027
[ INFO ] [2018-02-07 10:55:56] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 17070 (http)
[ INFO ] [2018-02-07 10:55:57] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 2052 ms
[ INFO ] [2018-02-07 10:55:57] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 10:55:57] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 10:55:57] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 10:55:57] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 10:55:57] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 10:55:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 10:55:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 10:55:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 10:55:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 10:55:58] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 10:55:58] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 10:55:58] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2018-02-07 10:55:58] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 10:55:58] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 10:55:58] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 10:55:58] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 10:55:58] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-07 10:55:58] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-07 10:55:59] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517972159251 with initial instances count: 2
[ INFO ] [2018-02-07 10:55:59] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-client with eureka with status UP
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517972159267, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 10:55:59] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070: registering service...
[ INFO ] [2018-02-07 10:55:59] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 17070 (http)
[ INFO ] [2018-02-07 10:55:59] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 17070
[ INFO ] [2018-02-07 10:55:59] boot.ConfigClientApplication [57] - Started ConfigClientApplication in 15.523 seconds (JVM running for 20.242)
[ INFO ] [2018-02-07 10:56:00] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070 - registration status: 204
[ INFO ] [2018-02-07 11:01:41] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://DESKTOP-FCMTAJR:8888/
[ INFO ] [2018-02-07 11:01:47] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=frist-springboot-notice, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2018-02-07 11:01:47] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [97] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource [name='https://github.com/wjj863257116/springCloudConfig/respo/frist-springboot-notice-dev.properties']]]
[ INFO ] [2018-02-07 11:01:47] boot.ConfigClientApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 11:01:47] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d425813: startup date [Wed Feb 07 11:01:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:01:48] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=e7f5a915-2102-35cc-88e6-ed36e5ab8930
[ INFO ] [2018-02-07 11:01:49] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 17070 (http)
[ INFO ] [2018-02-07 11:01:49] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1736 ms
[ INFO ] [2018-02-07 11:01:49] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 11:01:49] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 11:01:49] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 11:01:49] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 11:01:49] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 11:01:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d425813: startup date [Wed Feb 07 11:01:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:01:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/gitconfig/test]}" onto public java.lang.String boot.controller.TestController.gitConfigTest()
[ INFO ] [2018-02-07 11:01:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 11:01:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 11:01:50] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:01:50] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:01:50] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2018-02-07 11:01:50] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:01:50] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 11:01:50] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:01:50] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-07 11:01:50] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517972510962 with initial instances count: 2
[ INFO ] [2018-02-07 11:01:50] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-client with eureka with status UP
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517972510993, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 11:01:50] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070: registering service...
[ INFO ] [2018-02-07 11:01:51] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 17070 (http)
[ INFO ] [2018-02-07 11:01:51] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 17070
[ INFO ] [2018-02-07 11:01:51] boot.ConfigClientApplication [57] - Started ConfigClientApplication in 21.108 seconds (JVM running for 22.135)
[ INFO ] [2018-02-07 11:01:51] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070 - registration status: 204
[ INFO ] [2018-02-07 11:02:26] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2018-02-07 11:02:26] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
[ INFO ] [2018-02-07 11:08:53] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://DESKTOP-FCMTAJR:8888/
[ INFO ] [2018-02-07 11:09:00] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=frist-springboot-notice, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2018-02-07 11:09:00] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [97] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource [name='https://github.com/wjj863257116/springCloudConfig/respo/frist-springboot-notice-dev.properties']]]
[ INFO ] [2018-02-07 11:09:00] boot.ConfigClientApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 11:09:00] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 11:09:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:09:01] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=e7f5a915-2102-35cc-88e6-ed36e5ab8930
[ INFO ] [2018-02-07 11:09:01] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 17070 (http)
[ INFO ] [2018-02-07 11:09:01] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1124 ms
[ INFO ] [2018-02-07 11:09:01] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 11:09:02] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 11:09:02] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 11:09:02] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 11:09:02] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 11:09:02] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 11:09:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:09:02] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/gitconfig/test]}" onto public java.lang.String boot.controller.TestController.gitConfigTest() throws java.io.UnsupportedEncodingException
[ INFO ] [2018-02-07 11:09:02] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 11:09:02] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 11:09:02] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:09:02] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:09:02] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2018-02-07 11:09:03] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:09:03] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 11:09:03] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:09:03] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-07 11:09:03] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517972943589 with initial instances count: 2
[ INFO ] [2018-02-07 11:09:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-client with eureka with status UP
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517972943605, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070: registering service...
[ INFO ] [2018-02-07 11:09:03] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070 - registration status: 204
[ INFO ] [2018-02-07 11:09:03] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 17070 (http)
[ INFO ] [2018-02-07 11:09:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 17070
[ INFO ] [2018-02-07 11:09:03] boot.ConfigClientApplication [57] - Started ConfigClientApplication in 15.04 seconds (JVM running for 16.111)
[ INFO ] [2018-02-07 11:09:10] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2018-02-07 11:09:10] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
[ INFO ] [2018-02-07 11:09:10] boot.controller.TestController [24] - 测试数据：frist-spring-notice ?��????����???��??????
[ INFO ] [2018-02-07 11:10:14] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://DESKTOP-FCMTAJR:8888/
[ INFO ] [2018-02-07 11:10:20] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=frist-springboot-notice, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2018-02-07 11:10:20] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [97] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource [name='https://github.com/wjj863257116/springCloudConfig/respo/frist-springboot-notice-dev.properties']]]
[ INFO ] [2018-02-07 11:10:20] boot.ConfigClientApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 11:10:21] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 11:10:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:10:21] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=e7f5a915-2102-35cc-88e6-ed36e5ab8930
[ INFO ] [2018-02-07 11:10:21] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 17070 (http)
[ INFO ] [2018-02-07 11:10:22] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1031 ms
[ INFO ] [2018-02-07 11:10:22] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 11:10:22] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 11:10:22] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 11:10:22] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 11:10:22] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 11:10:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 11:10:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:10:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/gitconfig/test]}" onto public java.lang.String boot.controller.TestController.gitConfigTest() throws java.io.UnsupportedEncodingException
[ INFO ] [2018-02-07 11:10:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 11:10:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 11:10:22] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:10:22] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:10:22] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2018-02-07 11:10:23] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:10:23] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 11:10:23] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:10:23] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-07 11:10:23] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517973023523 with initial instances count: 2
[ INFO ] [2018-02-07 11:10:23] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-client with eureka with status UP
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517973023555, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070: registering service...
[ INFO ] [2018-02-07 11:10:23] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 17070 (http)
[ INFO ] [2018-02-07 11:10:23] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 17070
[ INFO ] [2018-02-07 11:10:23] boot.ConfigClientApplication [57] - Started ConfigClientApplication in 13.11 seconds (JVM running for 17.767)
[ INFO ] [2018-02-07 11:10:23] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070 - registration status: 204
[ INFO ] [2018-02-07 11:10:31] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2018-02-07 11:10:31] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
[ INFO ] [2018-02-07 11:10:31] boot.controller.TestController [24] - 测试数据：frist-spring-notice ?¡§????¨¨¡ã???¡§??????
[ INFO ] [2018-02-07 11:10:33] boot.controller.TestController [24] - 测试数据：frist-spring-notice ?¡§????¨¨¡ã???¡§??????
[ INFO ] [2018-02-07 11:13:31] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://DESKTOP-FCMTAJR:8888/
[ INFO ] [2018-02-07 11:13:35] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=frist-springboot-notice, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2018-02-07 11:13:35] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [97] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource [name='https://github.com/wjj863257116/springCloudConfig/respo/frist-springboot-notice-dev.properties']]]
[ INFO ] [2018-02-07 11:13:35] boot.ConfigClientApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 11:13:35] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 11:13:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:13:35] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=e7f5a915-2102-35cc-88e6-ed36e5ab8930
[ INFO ] [2018-02-07 11:13:35] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 17070 (http)
[ INFO ] [2018-02-07 11:13:36] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1084 ms
[ INFO ] [2018-02-07 11:13:36] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 11:13:36] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 11:13:36] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 11:13:36] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 11:13:36] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 11:13:36] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 11:13:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:13:37] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/gitconfig/test]}" onto public java.lang.String boot.controller.TestController.gitConfigTest() throws java.io.UnsupportedEncodingException
[ INFO ] [2018-02-07 11:13:37] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 11:13:37] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 11:13:37] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:13:37] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:13:37] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2018-02-07 11:13:37] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:13:37] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 11:13:37] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:13:37] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-07 11:13:37] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517973217852 with initial instances count: 2
[ INFO ] [2018-02-07 11:13:37] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-client with eureka with status UP
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517973217884, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070: registering service...
[ INFO ] [2018-02-07 11:13:37] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070 - registration status: 204
[ INFO ] [2018-02-07 11:13:37] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 17070 (http)
[ INFO ] [2018-02-07 11:13:37] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 17070
[ INFO ] [2018-02-07 11:13:37] boot.ConfigClientApplication [57] - Started ConfigClientApplication in 11.001 seconds (JVM running for 12.067)
[ INFO ] [2018-02-07 11:13:48] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2018-02-07 11:13:48] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
[ INFO ] [2018-02-07 11:13:48] boot.controller.TestController [24] - 测试数据：frist-spring-notice 忙篓隆氓聺聴猫掳聝莽聰篓忙聢聬氓聤聼
[ INFO ] [2018-02-07 11:18:48] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://DESKTOP-FCMTAJR:8888/
[ INFO ] [2018-02-07 11:18:56] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=frist-springboot-notice, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2018-02-07 11:18:56] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [97] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource [name='https://github.com/wjj863257116/springCloudConfig/respo/frist-springboot-notice-dev.properties']]]
[ INFO ] [2018-02-07 11:18:56] boot.ConfigClientApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 11:18:56] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 11:18:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:18:56] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=e7f5a915-2102-35cc-88e6-ed36e5ab8930
[ INFO ] [2018-02-07 11:18:57] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 17070 (http)
[ INFO ] [2018-02-07 11:18:57] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1447 ms
[ INFO ] [2018-02-07 11:18:57] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 11:18:57] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 11:18:57] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 11:18:57] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 11:18:57] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 11:18:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8deb645: startup date [Wed Feb 07 11:18:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d1ef81a
[ INFO ] [2018-02-07 11:18:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/gitconfig/test]}" onto public java.lang.String boot.controller.TestController.gitConfigTest() throws java.io.UnsupportedEncodingException
[ INFO ] [2018-02-07 11:18:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 11:18:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 11:18:58] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:18:58] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:18:58] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2018-02-07 11:18:58] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:18:58] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 11:18:58] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:18:58] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 11:18:58] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-07 11:18:58] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-07 11:18:59] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517973539346 with initial instances count: 2
[ INFO ] [2018-02-07 11:18:59] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-client with eureka with status UP
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517973539362, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070: registering service...
[ INFO ] [2018-02-07 11:18:59] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-CLIENT/DESKTOP-FCMTAJR:frist-springboot-config-client:17070 - registration status: 204
[ INFO ] [2018-02-07 11:18:59] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 17070 (http)
[ INFO ] [2018-02-07 11:18:59] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 17070
[ INFO ] [2018-02-07 11:18:59] boot.ConfigClientApplication [57] - Started ConfigClientApplication in 15.158 seconds (JVM running for 16.322)
[ INFO ] [2018-02-07 11:19:07] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2018-02-07 11:19:07] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
[ INFO ] [2018-02-07 11:19:07] boot.controller.TestController [25] - 测试数据：frist-spring-notice æ¨¡åè°ç¨æå
[ INFO ] [2018-02-07 11:22:10] boot.ConfigServerApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 11:22:10] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6955cb39: startup date [Wed Feb 07 11:22:10 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5dda768f
[ INFO ] [2018-02-07 11:22:12] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=b16d4c8a-5c85-367f-9a87-1593d9654cd0
[ INFO ] [2018-02-07 11:22:14] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8888 (http)
[ INFO ] [2018-02-07 11:22:16] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 5449 ms
[ INFO ] [2018-02-07 11:22:16] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 11:22:16] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-07 11:22:16] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 11:22:16] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 11:22:16] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 11:22:16] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 11:22:16] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-07 11:22:16] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6955cb39: startup date [Wed Feb 07 11:22:10 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5dda768f
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/encrypt],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.encrypt(java.lang.String,org.springframework.http.MediaType)
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/encrypt/{name}/{profiles}],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.encrypt(java.lang.String,java.lang.String,java.lang.String,org.springframework.http.MediaType)
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/decrypt/{name}/{profiles}],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.decrypt(java.lang.String,java.lang.String,java.lang.String,org.springframework.http.MediaType)
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/decrypt],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.decrypt(java.lang.String,org.springframework.http.MediaType)
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/encrypt/status],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.config.server.encryption.EncryptionController.status()
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/key],methods=[GET]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.getPublicKey()
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/key/{name}/{profiles}],methods=[GET]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.getPublicKey(java.lang.String,java.lang.String)
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}-{profiles}.properties],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.properties(java.lang.String,java.lang.String,boolean) throws java.io.IOException
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}-{profiles}.yml || /{name}-{profiles}.yaml],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.yaml(java.lang.String,java.lang.String,boolean) throws java.lang.Exception
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}/{profiles:.*[^-].*}],methods=[GET]}" onto public org.springframework.cloud.config.environment.Environment org.springframework.cloud.config.server.environment.EnvironmentController.defaultLabel(java.lang.String,java.lang.String)
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{label}/{name}-{profiles}.yml || /{label}/{name}-{profiles}.yaml],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.labelledYaml(java.lang.String,java.lang.String,java.lang.String,boolean) throws java.lang.Exception
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}/{profiles}/{label:.*}],methods=[GET]}" onto public org.springframework.cloud.config.environment.Environment org.springframework.cloud.config.server.environment.EnvironmentController.labelled(java.lang.String,java.lang.String,java.lang.String)
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}-{profiles}.json],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.jsonProperties(java.lang.String,java.lang.String,boolean) throws java.lang.Exception
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{label}/{name}-{profiles}.json],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.labelledJsonProperties(java.lang.String,java.lang.String,java.lang.String,boolean) throws java.lang.Exception
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{label}/{name}-{profiles}.properties],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.labelledProperties(java.lang.String,java.lang.String,java.lang.String,boolean) throws java.io.IOException
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}/{profile}/{label}/**],methods=[GET],produces=[application/octet-stream]}" onto public synchronized byte[] org.springframework.cloud.config.server.resource.ResourceController.binary(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.io.IOException
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}/{profile}/{label}/**],methods=[GET]}" onto public java.lang.String org.springframework.cloud.config.server.resource.ResourceController.retrieve(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,boolean) throws java.io.IOException
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:22:17] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:22:18] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ WARN ] [2018-02-07 11:22:21] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:22:21] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 11:22:21] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:22:21] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 11:22:21] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-07 11:22:21] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 11:22:22] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 11:22:23] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:22:23] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:22:23] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 11:22:23] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 11:22:23] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:22:24] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 11:22:24] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 11:22:24] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 11:22:24] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 11:22:24] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 11:22:24] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 11:22:24] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 11:22:27] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 11:22:27] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 11:22:27] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 11:22:27] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517973747242 with initial instances count: 0
[ INFO ] [2018-02-07 11:22:27] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-server with eureka with status UP
[ INFO ] [2018-02-07 11:22:27] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517973747258, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 11:22:27] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-SERVER/DESKTOP-FCMTAJR:frist-springboot-config-server:8888: registering service...
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2018-02-07 11:22:27] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 8888 (http)
[ INFO ] [2018-02-07 11:22:27] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 8888
[ INFO ] [2018-02-07 11:22:27] boot.ConfigServerApplication [57] - Started ConfigServerApplication in 19.898 seconds (JVM running for 21.317)
[ INFO ] [2018-02-07 11:22:28] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-SERVER/DESKTOP-FCMTAJR:frist-springboot-config-server:8888 - registration status: 204
[ INFO ] [2018-02-07 11:22:57] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 11:22:57] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 11:22:57] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 11:22:57] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 11:22:57] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 11:22:57] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: false
[ INFO ] [2018-02-07 11:22:57] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 11:22:57] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 11:24:37] boot.ConfigServerApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-07 11:24:37] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6955cb39: startup date [Wed Feb 07 11:24:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5dda768f
[ INFO ] [2018-02-07 11:24:38] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=b16d4c8a-5c85-367f-9a87-1593d9654cd0
[ INFO ] [2018-02-07 11:24:39] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8888 (http)
[ INFO ] [2018-02-07 11:24:39] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 2680 ms
[ INFO ] [2018-02-07 11:24:40] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2018-02-07 11:24:40] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-07 11:24:40] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-07 11:24:40] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-07 11:24:40] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-07 11:24:40] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-07 11:24:40] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-07 11:24:40] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6955cb39: startup date [Wed Feb 07 11:24:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5dda768f
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/encrypt],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.encrypt(java.lang.String,org.springframework.http.MediaType)
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/encrypt/{name}/{profiles}],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.encrypt(java.lang.String,java.lang.String,java.lang.String,org.springframework.http.MediaType)
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/decrypt/{name}/{profiles}],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.decrypt(java.lang.String,java.lang.String,java.lang.String,org.springframework.http.MediaType)
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/decrypt],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.decrypt(java.lang.String,org.springframework.http.MediaType)
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/encrypt/status],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.config.server.encryption.EncryptionController.status()
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/key],methods=[GET]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.getPublicKey()
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/key/{name}/{profiles}],methods=[GET]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.getPublicKey(java.lang.String,java.lang.String)
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}-{profiles}.properties],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.properties(java.lang.String,java.lang.String,boolean) throws java.io.IOException
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}-{profiles}.yml || /{name}-{profiles}.yaml],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.yaml(java.lang.String,java.lang.String,boolean) throws java.lang.Exception
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}/{profiles:.*[^-].*}],methods=[GET]}" onto public org.springframework.cloud.config.environment.Environment org.springframework.cloud.config.server.environment.EnvironmentController.defaultLabel(java.lang.String,java.lang.String)
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{label}/{name}-{profiles}.properties],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.labelledProperties(java.lang.String,java.lang.String,java.lang.String,boolean) throws java.io.IOException
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{label}/{name}-{profiles}.json],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.labelledJsonProperties(java.lang.String,java.lang.String,java.lang.String,boolean) throws java.lang.Exception
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{label}/{name}-{profiles}.yml || /{label}/{name}-{profiles}.yaml],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.labelledYaml(java.lang.String,java.lang.String,java.lang.String,boolean) throws java.lang.Exception
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}/{profiles}/{label:.*}],methods=[GET]}" onto public org.springframework.cloud.config.environment.Environment org.springframework.cloud.config.server.environment.EnvironmentController.labelled(java.lang.String,java.lang.String,java.lang.String)
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}-{profiles}.json],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.jsonProperties(java.lang.String,java.lang.String,boolean) throws java.lang.Exception
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}/{profile}/{label}/**],methods=[GET],produces=[application/octet-stream]}" onto public synchronized byte[] org.springframework.cloud.config.server.resource.ResourceController.binary(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.io.IOException
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/{name}/{profile}/{label}/**],methods=[GET]}" onto public java.lang.String org.springframework.cloud.config.server.resource.ResourceController.retrieve(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,boolean) throws java.io.IOException
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:24:41] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2018-02-07 11:24:42] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ WARN ] [2018-02-07 11:24:42] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:24:42] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2018-02-07 11:24:42] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-07 11:24:42] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-07 11:24:43] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-07 11:24:43] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-07 11:24:43] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-07 11:24:44] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:24:44] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1517973885816 with initial instances count: 1
[ INFO ] [2018-02-07 11:24:45] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application frist-springboot-config-server with eureka with status UP
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1517973885832, current=UP, previous=STARTING]
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-SERVER/DESKTOP-FCMTAJR:frist-springboot-config-server:8888: registering service...
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2018-02-07 11:24:45] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_FRIST-SPRINGBOOT-CONFIG-SERVER/DESKTOP-FCMTAJR:frist-springboot-config-server:8888 - registration status: 204
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2018-02-07 11:24:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2018-02-07 11:24:46] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 8888 (http)
[ INFO ] [2018-02-07 11:24:46] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 8888
[ INFO ] [2018-02-07 11:24:46] boot.ConfigServerApplication [57] - Started ConfigServerApplication in 11.143 seconds (JVM running for 15.512)
[ INFO ] [2018-02-07 11:29:45] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:34:45] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:39:45] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:44:45] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:49:45] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-07 11:54:45] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
